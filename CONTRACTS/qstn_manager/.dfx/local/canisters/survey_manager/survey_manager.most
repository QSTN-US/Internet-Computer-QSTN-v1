// Version: 1.0.0
type AssocList<K, V> = List<(K, V)>;
type AssocList__1<K, V> = AssocList<K, V>;
type Branch<K, V> = {left : Trie<K, V>; right : Trie<K, V>; size : Nat};
type CanisterId = Principal;
type Hash = Nat32;
type Key<K> = {hash : Hash; key : K};
type Leaf<K, V> = {keyvals : AssocList__1<Key<K>, V>; size : Nat};
type List<T> = ?(T, List<T>);
type SurveyIdText__1 = Text;
type Trie<K, V> = {#branch : Branch<K, V>; #empty; #leaf : Leaf<K, V>};
actor {
  stable var escrowCanisters :
    {
      #branch : Branch<SurveyIdText__1, CanisterId>;
      #empty;
      #leaf : Leaf<SurveyIdText__1, CanisterId>
    };
  stable var maxOversellPercentage : Nat
};
